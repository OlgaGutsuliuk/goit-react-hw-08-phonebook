{"version":3,"sources":["Components/tellContacts/contactsList/ContactsList.module.css","redux/tellContactsSelectors.js","Components/tellContacts/contactsForm/ContactsForm.js","redux/tellContactsOperations.js","Components/tellContacts/contactsList/ContactsList.js","Components/tellContacts/telContactFilter/TelContactFilter.js","Components/tellContacts/TellContacts.js","pages/ContactsPage.js","Components/tellContacts/contactsForm/TelContacts.module.css"],"names":["module","exports","getContactsSelector","state","contacts","items","errorContactsSelector","error","loaderContactsSelector","isContactLoding","filterContactsSelector","filter","getFilterContacts","createSelector","contact","name","toLowerCase","includes","number","initialState","ContactsForm","useState","setState","useSelector","dispatch","useDispatch","onHandleChange","e","resetError","target","value","prev","className","style","contact_form","onSubmit","preventDefault","some","alert","a","setContactsLoading","axios","post","data","addContacts","id","setError","response","form_label","form_input","type","pattern","title","required","onChange","form_button","ContactsList","telNumbers","deleteContacts","delete","list","map","telNumber","list_item","list_button","onClick","TelContactFilter","filterContacts","TellContacts","isLoading","useEffect","get","Object","keys","key","getAllContacts","ContactsPage","Component"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,YAAc,oC,2ICCxGC,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAC9CC,EAAwB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAChDC,EAAyB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,iBACjDC,EAAyB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,QAEjDC,EAAoBC,YACxB,CAACX,EAAqBQ,IACtB,SAACN,EAAUO,GACT,OAAOP,EAASO,QACd,SAAAG,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,gBAAkBF,EAAQI,OAAOD,SAASN,S,yDCFhGQ,EAAe,CACnBf,SAAU,GACVW,KAAM,GACNJ,OAAQ,GACRO,OAAQ,IAGK,SAASE,IACtB,MAA0BC,mBAASF,GAAnC,mBAAOhB,EAAP,KAAcmB,EAAd,KACMf,EAAQgB,YAAYjB,GACpBF,EAAWmB,YAAYrB,GACvBsB,EAAWC,cAiBXC,EAAiB,SAAAC,GACrBpB,GAASiB,EAASI,eAClB,MAAwBD,EAAEE,OAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACdR,GAAS,SAAAS,GAAI,kCAAUA,GAAV,kBAAiBhB,EAAOe,QAGvC,OACE,uBAAME,UAAWC,IAAMC,aAAcC,SAjBhB,SAAAR,GALM,IAAAZ,ECnBFD,GDyBzBa,EAAES,iBANyBrB,EAOJZ,EAAMY,KANtBX,EAASiC,MAAK,SAAAvB,GAAO,OAAIA,EAAQC,OAASA,MAO/CuB,MAAM,GAAD,OAAInC,EAAMY,KAAV,oBAGPS,GC9ByBV,ED8BKX,EC9BE,uCAAI,WAAMqB,GAAN,iBAAAe,EAAA,6DACtCf,EAASgB,eAD6B,kBAGbC,IAAMC,KAAN,qEAAiF5B,GAHpE,gBAG5B6B,EAH4B,EAG5BA,KACRnB,EAASoB,YAAY,2BAAK9B,GAAN,IAAe+B,GAAIF,EAAK5B,SAJR,gDAMpCS,EAASsB,YAAS,KAAMC,SAASJ,KAAKpC,QANF,yBAQpCiB,EAASgB,eAR2B,4EAAJ,wDD+BhClB,EAASH,KAUT,UACE,wBAAOa,UAAWC,IAAMe,WAAxB,kBACQ,IACN,uBACEhB,UAAWC,IAAMgB,WACjBC,KAAK,OACLnC,KAAK,OACLoC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAU5B,EACVI,MAAO3B,EAAMY,UAGjB,wBAAOiB,UAAWC,IAAMe,WAAxB,oBAEE,uBACEhB,UAAWC,IAAMgB,WACjBC,KAAK,MACLnC,KAAK,SACLoC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAU5B,EACVI,MAAO3B,EAAMe,YAGjB,wBAAQc,UAAWC,IAAMsB,YAAaL,KAAK,SAA3C,4B,sBEjES,SAASM,IACtB,IAAMC,EAAalC,YAAYX,GACxBY,EAAWC,cACdiC,EAAiB,SAAC/B,GDMQ,IAAAkB,ECL7BrB,GDK6BqB,ECLIlB,EAAEE,OAAOgB,GDKX,uCAAI,WAAMrB,GAAN,SAAAe,EAAA,6DACpCf,EAASgB,eAD2B,kBAG5BC,IAAMkB,OAAN,wEAA8Ed,EAA9E,UAH4B,OAIlCrB,EAASkC,YAAeb,IAJU,gDAMlCrB,EAASsB,YAAS,KAAMC,SAASJ,KAAKpC,QANJ,yBAQlCiB,EAASgB,eARyB,4EAAJ,yDCFhC,OACE,oBAAIR,UAAWC,IAAM2B,KAArB,SACMH,EAAWI,KAAI,SAAAC,GAAS,OACzB,qBAAI9B,UAAWC,IAAM8B,UAArB,UACG,8BAAID,EAAU/C,KAAd,QACA,4BAAI+C,EAAU5C,SACb,wBAAQc,UAAWC,IAAM+B,YAAad,KAAK,SAASe,QAASP,EAAgBb,GAAIiB,EAAUjB,GAA3F,sBAHiCiB,EAAUjB,SCVxD,IAYeqB,EAZU,WACrB,IAAMvD,EAASY,YAAYb,GACrBc,EAAWC,cAEjB,OACI,wBAAOO,UAAWC,IAAMe,WAAxB,kCAEA,uBAAOhB,UAAWC,IAAMgB,WAAYC,KAAK,OAAOpB,MAAOnB,EAAQ2C,SAJ9C,SAAC3B,GAAD,OAAMH,EAAS2C,YAAexC,EAAEE,OAAOC,eCDjD,SAASsC,IACtB,IAAM7D,EAAQgB,YAAYjB,GACpB+D,EAAY9C,YAAYf,GACxBgB,EAAWC,cAQjB,OAPA6C,qBACE,WACE9C,EHayB,uCAAM,WAAMA,GAAN,mBAAAe,EAAA,6DACnCf,EAASgB,eAD0B,kBAGVC,IAAM8B,IAAN,sEAHU,iBAGzB5B,EAHyB,EAGzBA,QAEAvC,EAAWoE,OAAOC,KAAK9B,GAAMkB,KAAI,SAAAa,GAAG,oBACxC7B,GAAI6B,GACD/B,EAAK+B,OAEVlD,EAASmD,YAAevE,KATO,gDAYjCoB,EAASsB,YAAS,KAAMC,SAASJ,KAAKpC,QAZL,yBAcjCiB,EAASgB,eAdwB,4EAAN,yDGX3B,CAAChB,IAID,qCACGjB,GAAS,6BAAKA,IACd8D,GAAa,6CACd,cAACjD,EAAD,IACA,cAAC,EAAD,IACA,cAACoC,EAAD,O,ICtBAoB,E,4JAEJ,WACE,OAAO,cAAC,EAAD,Q,GAHgBC,aAOZD,a,mBCTf5E,EAAOC,QAAU,CAAC,aAAe,kCAAkC,WAAa,gCAAgC,WAAa,gCAAgC,YAAc","file":"static/js/ContactsPage.af88752b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__TYo8H\",\"list_item\":\"ContactsList_list_item__1dTvg\",\"list_button\":\"ContactsList_list_button__MZa34\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContactsSelector = state => state.contacts.items;\nconst errorContactsSelector = state => state.contacts.error;\nconst loaderContactsSelector = state => state.contacts.isContactLoding;\nconst filterContactsSelector = state => state.contacts.filter;\n\nconst getFilterContacts = createSelector(\n  [getContactsSelector, filterContactsSelector],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact => contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter)\n    );\n  }\n);\n\nexport { getContactsSelector, errorContactsSelector, loaderContactsSelector, filterContactsSelector, getFilterContacts};\n","import React from \"react\";\nimport style from \"../contactsForm/TelContacts.module.css\";\n\nimport { resetError } from \"../../../redux/tellContactsAction\";\nimport { errorContactsSelector, getContactsSelector } from \"../../../redux/tellContactsSelectors\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContactsOperation } from \"../../../redux/tellContactsOperations\";\n\nconst initialState = {\n  contacts: [],\n  name: \"\",\n  filter: \"\",\n  number: \"\"\n};\n\nexport default function ContactsForm() {\n  const [state, setState] = useState(initialState);\n  const error = useSelector(errorContactsSelector)\n  const contacts = useSelector(getContactsSelector)\n  const dispatch = useDispatch();\n\n    const checkDublicateName = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (checkDublicateName(state.name)) {\n      alert(`${state.name} already exist`);\n      return;\n    }\n    dispatch(addContactsOperation(state));\n    setState(initialState);\n  };\n\n  const onHandleChange = e => {\n    error && dispatch(resetError());\n    const { name, value } = e.target;\n    setState(prev => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <form className={style.contact_form} onSubmit={onHandleSubmit}>\n      <label className={style.form_label}>\n        Name:{\" \"}\n        <input\n          className={style.form_input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onHandleChange}\n          value={state.name}\n        />\n      </label>\n      <label className={style.form_label}>\n        Number:\n        <input\n          className={style.form_input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onHandleChange}\n          value={state.number}\n        />\n      </label>\n      <button className={style.form_button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n","import axios from \"axios\";\nimport { addContacts, deleteContacts, getAllContacts, setContactsLoading, setError } from \"./tellContactsAction\";\n\nconst addContactsOperation = contact => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.post(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts.json`, contact);\n    dispatch(addContacts({ ...contact, id: data.name }));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst deleteContactsOperation = id => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    await axios.delete(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts/${id}.json`);\n    dispatch(deleteContacts(id));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst getAllClientsOperation = () => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.get(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts.json`);\n    if (data) {\n      const contacts = Object.keys(data).map(key => ({\n        id: key,\n        ...data[key]\n      }));\n      dispatch(getAllContacts(contacts));\n    }\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nexport { addContactsOperation, deleteContactsOperation, getAllClientsOperation };\n","import React from \"react\";\nimport style from \"../contactsList/ContactsList.module.css\";\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { deleteContactsOperation } from \"../../../redux/tellContactsOperations\";\nimport { getFilterContacts } from \"../../../redux/tellContactsSelectors\";\n\nexport default function ContactsList() {\n  const telNumbers = useSelector(getFilterContacts)\n   const dispatch = useDispatch()\nconst deleteContacts = (e) => {\n   dispatch(deleteContactsOperation(e.target.id))\n    \n  }\n  return (\n    <ul className={style.list}>\n        { telNumbers.map(telNumber =>\n        (<li className={style.list_item} key={telNumber.id}>\n            <p>{telNumber.name}: </p>\n            <p>{telNumber.number}</p>\n             <button className={style.list_button} type=\"button\" onClick={deleteContacts} id={telNumber.id}>Delete</button>\n            </li>\n    ))}\n    </ul>\n  )\n}\n\n\n","import React from 'react';\nimport style from '../contactsForm/TelContacts.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContactsSelector } from '../../../redux/tellContactsSelectors'\nimport {filterContacts} from '../../../redux/tellContactsAction'\n\nconst TelContactFilter = () => {\n    const filter = useSelector(filterContactsSelector)\n    const dispatch = useDispatch();\n    const setFilterValue=(e)=> dispatch(filterContacts(e.target.value))\n    return (\n        <label className={style.form_label}> \n        Find contacts by name\n        <input className={style.form_input} type=\"text\" value={filter} onChange={setFilterValue}/>\n       </label>\n    );\n}\n\nexport default TelContactFilter;\n\n","import React, { useEffect } from \"react\";\nimport ContactsForm from \"./contactsForm/ContactsForm\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport TelContactFilter from \"./telContactFilter/TelContactFilter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllClientsOperation } from \"../../redux/tellContactsOperations\";\nimport { errorContactsSelector, loaderContactsSelector } from \"../../redux/tellContactsSelectors\";\n\nexport default function TellContacts() {\n  const error = useSelector(errorContactsSelector);\n  const isLoading = useSelector(loaderContactsSelector);\n  const dispatch = useDispatch();\n  useEffect(\n    () => {\n      dispatch(getAllClientsOperation());\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      {isLoading && <h2>Loading....</h2>}\n      <ContactsForm />\n      <TelContactFilter />\n      <ContactsList />\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport TelContacts from '../Components/tellContacts/TellContacts'\n\nclass ContactsPage extends Component {\n\n  render() {\n    return <TelContacts />;\n  }\n}\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"TelContacts_contact_form__Cu-U9\",\"form_label\":\"TelContacts_form_label__2Ppbc\",\"form_input\":\"TelContacts_form_input__zFh_L\",\"form_button\":\"TelContacts_form_button__3ZGRn\"};"],"sourceRoot":""}