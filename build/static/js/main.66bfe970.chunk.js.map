{"version":3,"sources":["redux/tellContactsAction.js","Components/header/HederStyled.js","redux/auth/authSelector.js","routes/mainRoutes.js","Components/header/navigation/NavigationStyled.js","Components/userInfo/UserInfo.js","Components/header/navigation/NavigationListItem.js","Components/header/navigation/Navigation.js","Components/header/Header.js","routes/PrivateRoute.js","routes/PublicRoute.js","Components/main/Main.js","Components/App.js","redux/auth/authReducers.js","redux/tellContactsReducer.js","redux/store.js","index.js","redux/auth/authActions.js"],"names":["getAllContacts","createAction","addContacts","deleteContacts","filterContacts","setContactsLoading","setError","resetError","HeaderContainer","styled","header","getIsAuthSelector","state","auth","token","idToken","getEmailSelector","email","mainRoutes","name","path","exact","component","lazy","isPrivate","isRestricted","NavigationContainer","nav","UserInfo","useSelector","isAuth","dispatch","useDispatch","className","type","onClick","logOut","NavigationListItem","item","location","to","pathname","from","activeClassName","Navigation","useLocation","map","Header","PrivateRoute","PublicRoute","Main","fallback","key","App","tokenReducer","createReducer","registerSuccess","_","payload","loginSuccess","loaderReducer","registerRequest","registerError","loginRequest","loginError","errorReducer","authReducer","combineReducers","isLoading","error","itemsReducer","filter","contact","id","filterContactsReducer","contactsLoaderReducer","contactErrorReducer","contactReducer","items","isContactLoding","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","storage","whitelist","rootReducer","contacts","persistReducer","store","configureStore","reducer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66bfe970.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getAllContacts = createAction(\"tellContacts/getAllContacts\");\nexport const addContacts = createAction(\"tellContacts/addContacts\");\nexport const deleteContacts = createAction(\"tellContacts/deleteContacts\");\nexport const filterContacts = createAction(\"tellContacts/filterContacts\");\n\nexport const setContactsLoading = createAction(\"tellContacts/setContactsLoading\");\nexport const setError = createAction(\"tellContacts/setError\");\n\nexport const resetError = createAction(\"tellContacts/resetError\");\n","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.header`\nheight: 60px;\nborder-bottom: solid 1px black;\nbackground-color: #e7f70c;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 0 20px;\n\n\n\n\n\n\n`","const getIsAuthSelector = state => state.auth.token.idToken;\n\nconst getEmailSelector = state => state.auth.token.email;\n\nexport  {getIsAuthSelector, getEmailSelector};","import { lazy } from \"react\";\n\nconst mainRoutes = [\n  {\n    name: \"Home\",\n    path: \"/\",\n    exact: true,\n    component: lazy(() => import(\"../pages/HomePage\" /*webpackChankName:'HomePage'*/)),\n    isPrivate: false,\n    isRestricted: false,\n  },\n\n  {\n    name: \"Contacts\",\n    path: \"/contacts\",\n    exact: true,\n    component: lazy(() => import(\"../pages/ContactsPage\" /*webpackChunkName:'ContactsPage'*/)),\n    isPrivate: true,\n    isRestricted: false,\n  },\n  {\n    name: \"Registration\",\n    path: \"/registration\",\n    exact: true,\n    component: lazy(() => import(\"../pages/RegisterPage\" /*webpackChunkName:'RegistrationPage'*/)),\n    isPrivate: false,\n    isRestricted: true,\n  },\n  {\n    name: \"Login\",\n    path: \"/login\",\n    exact: true,\n    component: lazy(() => import(\"../pages/LoginPage\" /*webpackChunkName:'LoginPage'*/)),\n    isPrivate: false,\n    isRestricted: true,\n  }\n];\nexport default mainRoutes;\n","import styled from 'styled-components'\n\nexport const NavigationContainer = styled.nav`\n.list{\nlist-style: none;\ndisplay: flex;\nalign-items: center;\nmargin-right:- 30px;\n}\n\n.listItem{\nmargin-right: 30px;\n}\n\n.link{\n    text-decoration: none;\n    text-transform: uppercase;\n    color: #080808;\n\n}\n.activeLink{\n  color: blue;  \n}\n.userInfo{\ndisplay: flex;\n}\n\n.userItem{\n  display: flex;\n  margin-right: 15px;\n  justify-content: center;\nalign-items: center;\n\n}\n\n.userBtn{\n display: inline-flex;\n  color: #fff;\n  background-color: #3f51b5;\n  padding: 2px 2px;\n  border-radius: 4px;\n  cursor: pointer;\n  text-transform: uppercase;\n}\n\n.nav{\n  display: flex;\njustify-content: center;\nalign-items: center;\n}\n\n`","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../redux/auth/authActions\";\nimport { getEmailSelector, getIsAuthSelector } from \"../../redux/auth/authSelector\";\nimport { NavigationContainer } from \"../header/navigation/NavigationStyled\";\n\nconst UserInfo = () => {\n  const email = useSelector(getEmailSelector);\n  const isAuth = useSelector(getIsAuthSelector);\n  const dispatch = useDispatch();\nconst logOutContacts =()=> dispatch(logOut())\n\n  return (\n    <>\n      <NavigationContainer>\n        <div className=\"userInfo\">\n        <p  className=\"userItem\">{email}</p>\n      {isAuth && ( \n        <button className=\"userBtn\" type=\"button\" onClick={logOutContacts}>\n          LogOut\n        </button>\n      )}\n      </div>\n      </NavigationContainer> \n    </>\n  );\n};\n\n\n\nexport default  UserInfo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationListItem = ({ item, location, isAuth }) => {\n    return (\n        <>\n            {!item.isPrivate && !item.isRestricted && <li className=\"listItem\" >\n              <NavLink\n                to={{\n                  pathname: item.path,\n                  state: {\n                    from: location.pathname\n                  }\n                }}\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                exact={item.exact}\n              >\n                {item.name}\n              </NavLink>\n            </li>}\n            {isAuth && item.isPrivate && !item.isRestricted && <li className=\"listItem\" >\n              <NavLink\n                to={{\n                  pathname: item.path,\n                  state: {\n                    from: location.pathname\n                  }\n                }}\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                exact={item.exact}\n              >\n                {item.name}\n              </NavLink>\n            </li>}\n{!isAuth && !item.isPrivate && item.isRestricted && <li className=\"listItem\" >\n              <NavLink\n                to={{\n                  pathname: item.path,\n                  state: {\n                    from: location.pathname\n                  }\n                }}\n                className=\"link\"\n                activeClassName=\"activeLink\"\n                exact={item.exact}\n              >\n                {item.name}\n              </NavLink>\n            </li>}\n        \n            </>\n    );\n}\n\nexport default NavigationListItem;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation} from \"react-router-dom\";\nimport { getIsAuthSelector } from \"../../../redux/auth/authSelector\";\nimport mainRoutes from \"../../../routes/mainRoutes\";\nimport UserInfo from \"../../userInfo/UserInfo\";\nimport NavigationListItem from \"./NavigationListItem\";\nimport { NavigationContainer } from \"./NavigationStyled\";\n\nconst Navigation = () => {\n  const isAuth = useSelector(getIsAuthSelector)\n  const location= useLocation()\n  return (\n    <NavigationContainer>\n      <nav className=\"nav\">\n       <ul className=\"list\">\n        {mainRoutes.map(item => (\n          <NavigationListItem item={item} location={location} key={item.path} isAuth={isAuth} />\n        ))}\n      </ul>\n      {isAuth && <UserInfo />} \n      </nav>\n    </NavigationContainer>\n  );\n};\n\n\n\nexport default Navigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HeaderContainer } from \"./HederStyled\";\nimport Navigation from \"./navigation/Navigation\";\n\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <Link to=\"/\">PHONE_BOOK</Link>\n        <Navigation/>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\n    return isAuth? <Route path={path} exact={exact} component={component} /> : <Redirect to=\"/login\"/>;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nconst PublicRoute = ({ path, exact, component, isAuth, isRestricted }) => {\n  return isAuth && isRestricted ? <Redirect to=\"/contacts\" /> : <Route path={path} exact={exact} component={component} />;\n};\n\nexport default PublicRoute;\n","import React, { Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport { getIsAuthSelector } from \"../../redux/auth/authSelector\";\nimport mainRoutes from \"../../routes/mainRoutes\";\nimport PrivateRoute from \"../../routes/PrivateRoute\";\nimport PublicRoute from \"../../routes/PublicRoute\";\n\nconst Main = () => {\n  const isAuth = useSelector(getIsAuthSelector)\n  return (\n    <>\n      <Suspense fallback={<h2>LOADING....</h2>}>\n        <Switch>\n          {mainRoutes.map(item =>\n            item.isPrivate ? (\n              <PrivateRoute {...item} key={item.path} isAuth={isAuth} />\n            ) : (\n              <PublicRoute {...item} key={item.path} isAuth={isAuth} />\n            )\n          )}\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react'\nimport Header from './header/Header';\nimport Main from './main/Main';\n\nconst App = () => {\n    return (\n        <>\n   <Header/>\n    <Main />\n    </>\n    );\n}\n\nexport default App;","import { combineReducers, createReducer } from '@reduxjs/toolkit'\nimport { loginError, loginRequest, loginSuccess, logOut, registerError, registerRequest, registerSuccess } from './authActions'\n\nconst tokenReducer = createReducer(\n  {},\n  {\n    [registerSuccess]: (_, { payload }) => payload,\n    [loginSuccess]: (_, { payload }) => payload,\n    [logOut]: () => ({})\n  }\n);\n\nconst loaderReducer = createReducer(false, {\n  [registerRequest]: state => !state,\n  [registerSuccess]: state => !state,\n  [registerError]: state => !state,\n\n  [loginRequest]: state => !state,\n  [loginSuccess]: state => !state,\n  [loginError]: state => !state,\n  [logOut]: () => false\n});\n\nconst errorReducer = createReducer(\"\", {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logOut]: () => \"\"\n});\n\nconst authReducer = combineReducers({\n  token: tokenReducer,\n  isLoading: loaderReducer,\n  error: errorReducer\n});\n\nexport default authReducer;\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { getAllContacts, addContacts, deleteContacts, filterContacts, setContactsLoading, setError, resetError } from \"./tellContactsAction\";\n\nconst itemsReducer = createReducer([], {\n  [getAllContacts]: (_, { payload }) => payload,\n  [addContacts]: (state, { payload }) => [...state, payload],\n  [deleteContacts]: (state, { payload }) => [...state.filter(contact => contact.id !== payload)]\n});\n\n const filterContactsReducer = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload\n});\n\nconst contactsLoaderReducer = createReducer(false, {\n  [setContactsLoading]: state => !state\n});\n\nconst contactErrorReducer = createReducer(\"\", {\n  [setError]: (_, { payload }) => payload,\n  [resetError]: () => \"\"\n});\n\nexport const contactReducer = combineReducers({\n  items: itemsReducer,\n  isContactLoding: contactsLoaderReducer,\n  error: contactErrorReducer,\n  filter: filterContactsReducer\n});\n\n","import { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE } from \"redux-persist\";\nimport { REGISTER } from \"redux-persist/es/constants\";\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport authReducer from \"./auth/authReducers\";\nimport { contactReducer } from \"./tellContactsReducer\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n];\n\nconst persistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"]\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer,\n  auth: persistReducer(persistConfig, authReducer),\n})\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware\n});\n\npersistStore(store);\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>,  \n    document.getElementById('root')\n);","import { createAction } from '@reduxjs/toolkit'\n\nexport const registerRequest = createAction('auth/registerRequest') \nexport const registerSuccess = createAction('auth/registerSuccess') \nexport const registerError = createAction('auth/registerError') \n\nexport const loginRequest = createAction('auth/loginRequest') \nexport const loginSuccess = createAction('auth/loginSuccess') \nexport const loginError = createAction('auth/loginError') \n\nexport const logOut = createAction('auth/logOut') "],"sourceRoot":""}